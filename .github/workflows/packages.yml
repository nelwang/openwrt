name: Build dnsmasq-full (Xiaomi AX3600)

on:
  workflow_dispatch:  # Trigger manually

jobs:
  build:
    runs-on: ubuntu-22.04  # Use Ubuntu 22.04 runner as build environment
    steps:
      - name: Checkout OpenWrt source
        uses: actions/checkout@v4  # Check out the forked OpenWrt repository (23.05+)
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk flex git subversion gettext quilt libssl-dev xsltproc \
            libxml-parser-perl python3-distutils unzip file wget bc
          # (Include other OpenWrt prerequisites as needed)
      
      - name: Workaround build tool issues (libdeflate-gzip, openssl)
        run: |
          # Create symlinks to avoid common build errors on Ubuntu 22.04
          sudo ln -sf $(which gzip) /usr/bin/libdeflate-gzip
          sudo ln -sf $(which openssl) /usr/bin/openssl
          
      - name: Update OpenWrt feeds
        run: |
          ./scripts/feeds update -a   # Pull in all feeds (packages)
          ./scripts/feeds install -a  # Install all feed packages
      
      - name: Configure build for Xiaomi AX3600 (dnsmasq-full with IPSet)
        run: |
          # Set target to Xiaomi AX3600 (Qualcomm IPQ807x) [oai_citation_attribution:0‡github.com](https://github.com/yaya131/AX6-AX3600_Almighty-Edition_Config/blob/main/AX3600-5.15.config#:~:text=CONFIG_TARGET_ipq807x%3Dy)
          echo "CONFIG_TARGET_ipq807x=y" > .config
          echo "CONFIG_TARGET_ipq807x_generic=y" >> .config
          echo "CONFIG_TARGET_ipq807x_generic_DEVICE_xiaomi_ax3600=y" >> .config
          # Enable dnsmasq-full package with IPSet support; disable default dnsmasq [oai_citation_attribution:1‡github.com](https://github.com/yaya131/AX6-AX3600_Almighty-Edition_Config/blob/main/AX3600-5.15.config#:~:text=CONFIG_PACKAGE_dnsmasq%20is%20not%20set)
          echo "CONFIG_PACKAGE_dnsmasq-full=y" >> .config
          echo "CONFIG_PACKAGE_dnsmasq_full_ipset=y" >> .config
          echo "CONFIG_PACKAGE_dnsmasq=n" >> .config
          # Generate default config for all other options
          make defconfig  # Expands the minimal .config into a complete configuration
      
      - name: Compile dnsmasq-full package
        run: |
          # Build only the dnsmasq-full package (with above configuration)
          make -j$(nproc) package/dnsmasq-full/compile V=s
      
      - name: Upload dnsmasq-full .ipk artifact
        uses: actions/upload-artifact@v4
        with:
          name: dnsmasq-full_ipk
          path: bin/packages/**/*dnsmasq-full*.ipk  # Path to the built .ipk package
